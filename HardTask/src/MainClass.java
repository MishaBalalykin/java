import java.io.IOException;

public class MainClass {
    /*
    Слабые места: если типы функций будут повторяться, то будет выполнена последняя функция,
    Например, входной файл выглядит так:
    F 10
    F 11
    В этом случае в результирующий файл будет записан результат вычисления F11,
    но из условия понятно, что такого быть не должно, поэтому решать эту проблему не стал.
    Если функции, предусматривающей один фходной параметр передать несколько параметров,
    то результат будет только для первого параметра
    Например, входной файл выглядит так:
    F 10 12
    В этом случае в результирующий файл будет записан результат вычисления F10.
    Чтобы это испавить необходимо добавить проверку количества переданных параметров.

    При разработке, иметь в виду:
     - что Файлы, поступающие на обработку могут иметь большое количество строк.
       Какой бы большой файл не был, он будет считываться построчно до тех пор, пока есть не прочитанные строки
     - что список типов операндов может быть расширен.
       Все параметры функций считываются в тип данных Double,
       а перед записью в результирующий файл специальный метод проверяет результат на целое число,
       если целое, то приводит его к int, если нет, запишет в double/
     - что список функций может быть расширен.
       Чтобы реализовать возможность беспроблемно добавлять новые функции во входной файл
       и при этом не менять код вызова, используем полиморфизм.
     */
    public static void main(String[] args) throws IOException {
        String fileName = "";
        if (args.length > 0){
            fileName = args[0];
        }
        WriteFile writeFile = new WriteFile();
        writeFile.writeFile(fileName);
    }
}
